{"version":3,"sources":["Components/NavBar.js","Components/Slider.js","app/selectors/connection.js","Components/Connection.js","app/actions/connection.js","app/constants/actions.js","app/selectors/motors.js","pages/home/index.js","app/actions/motors.js","pages/settings/Limits/Item.js","pages/settings/Limits/index.js","pages/settings/index.js","pages/index.js","App.js","serviceWorker.js","app/reducers/motors.js","app/reducers/ui.js","app/reducers/root.js","app/middleware/app/connect.js","app/middleware/core/index.js","app/middleware/core/persist.js","app/middleware/index.js","app/middleware/app/motors.js","app/store.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","classes","AppBar","position","Toolbar","className","Button","component","Link","to","color","Typography","variant","IconButton","root","height","textAlign","id","name","min","max","onChange","disabled","value","useState","editingValue","setEditingValue","Grid","container","spacing","alignItems","item","xs","gutterBottom","Slider","step","valueLabelDisplay","onChangeCommitted","_","getIsConnecting","state","ui","connecting","getUrl","url","mapDispatchToProps","handleConnectButton","type","updateUrl","payload","connect","editingUrl","setEditingUrl","sm","TextField","label","fullWidth","evt","target","onClick","getMotors","createSelector","motors","byId","motorsById","Object","values","margin","padding","sliders","marginTop","display","justifyContent","updateMotorValue","motorId","fetchMotorValues","Paper","map","key","Item","handleMaxStep","handleMinStep","looseFocus","blur","preventDefault","justify","toString","replace","onKeyUp","updateMotorRange","handleRangeChange","Settings","path","Home","NavBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","order","connected","combineReducers","action","connectMiddleware","getState","dispatch","next","localStorage","setItem","JSON","stringify","coreMiddleware","fetch","padStart","join","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","parse","getItem","store","createStore","applyMiddleware","middleware","ReactDOM","render","StrictMode","CssBaseline","App","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef9f2a14.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, makeStyles, IconButton, Button } from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <div className={classes.title}>\r\n                    <Button component={Link} to=\"/\" color=\"inherit\">\r\n                        <Typography variant=\"h6\">\r\n                            Robotic Arm\r\n                        </Typography>\r\n                    </Button>\r\n                </div>\r\n                <IconButton component={Link} to={\"/settings\"} color=\"inherit\">\r\n                    <SettingsIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Typography, Slider, makeStyles, Grid } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: \"7em\"\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default ({ id, name, min, max, onChange, disabled, value }) => {\r\n    const classes = useStyles();\r\n    const [editingValue, setEditingValue] = useState(null);\r\n\r\n    return (\r\n        <Grid container spacing={3} alignItems=\"center\" className={classes.root}>\r\n            <Grid item xs={4}>\r\n                <Typography gutterBottom className={classes.title}>{name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Slider\r\n                    value={editingValue || value}\r\n                    step={1}\r\n                    valueLabelDisplay=\"on\"\r\n                    min={min}\r\n                    max={max}\r\n                    onChangeCommitted={(_, value) => onChange(id, value) && setEditingValue(null)}\r\n                    onChange={(_, value) => setEditingValue(value)}\r\n                    disabled={disabled}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","export const getIsConnecting = state => state.ui.connecting;\r\nexport const getIsConnected = state => state.ui.connected;\r\nexport const getUrl = state => state.ui.url;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsConnected, getIsConnecting, getUrl } from \"app/selectors/connection\";\r\nimport { toggleConnection, updateUrl } from \"app/actions/connection\";\r\nimport { Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\n\r\nconst Connection = ({ url, updateUrl, connecting }) => {\r\n    const [editingUrl, setEditingUrl] = useState(url);\r\n\r\n    const handleTextBox = (evt) => {\r\n        setEditingUrl(evt.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">\r\n                Connection\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={8}>\r\n                    <TextField label=\"url\" fullWidth value={editingUrl} onChange={handleTextBox} disabled={connecting} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => updateUrl(editingUrl)} disabled={connecting}>Update</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    url: getUrl(state),\r\n    connecting: getIsConnecting(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handleConnectButton: toggleConnection,\r\n    updateUrl\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Connection);","import { CONNECT, TOGGLE_CONNECTION, UPDATE_URL } from \"app/constants/actions\";\r\n\r\nexport const updateUrl = url => ({\r\n    type: UPDATE_URL,\r\n    payload: url\r\n});\r\n\r\nexport const toggleConnection = () => ({\r\n    type: TOGGLE_CONNECTION\r\n});","export const CONNECTED = \"CONNECTED\";\r\nexport const CONNECTING = \"CONNECTING\";\r\nexport const CONNECT = \"CONNECT\";\r\nexport const DISCONNECTED = \"DISCONNECTED\";\r\nexport const TOGGLE_CONNECTION = \"TOGGLE_CONNECTION\";\r\nexport const UPDATE_URL = \"UPDATE_URL\";\r\nexport const UPDATED_MOTOR_VALUE = \"UPDATED_MOTOR_VALUE\";\r\nexport const FETCH_MOTOR_VALUES = \"FETCH_MOTOR_VALUES\";\r\nexport const SET_MOTORS_VALUE = \"SET_MOTORS_VALUE\";\r\n\r\nexport const MOTOR_RANGE_MODIFIED = \"MOTOR_RANGE_MODIFIED\";","import { createSelector } from \"reselect\";\r\n\r\nconst getMotorsById = state => state.motors.byId;\r\n\r\nexport const getMotors = createSelector(\r\n    [getMotorsById],\r\n    motorsById => Object.values(motorsById)\r\n);","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Typography, Grid, TextField, Button, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport Slider from \"Components/Slider\";\r\nimport Connection from \"Components/Connection\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport data from \"../../config.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMotors } from \"app/selectors/motors\";\r\nimport { updatedMotorValue, fetchMotorValues } from \"app/actions/motors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2)\r\n  },\r\n  sliders: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  }\r\n}));\r\n\r\nconst Home = ({ motors, updateMotorValue }) => {\r\n  const classes = useStyles();\r\n\r\n  // const handleConnect = () => {\r\n  //   if(!connected) {\r\n  //     setConnecting(true);\r\n  //     fetch(`http://${url}/position`)\r\n  //       .then(response => response.text())\r\n  //       .then(text => {\r\n  //         setConnecting(false);\r\n  //         setConnected(true);\r\n\r\n  //         setById(byId => {\r\n  //           const updatedById = {...byId};\r\n  //           const values = text.split(\"&\").map(i => {\r\n  //             const [name, value] = i.split(\"=\");\r\n  //             return { name, value};\r\n  //           });\r\n\r\n  //           values.forEach(({ name, value }) => updatedById[name].value = value);\r\n  //           return updatedById;\r\n  //         });\r\n  //       })\r\n  //       .catch(err => {\r\n  //         setConnecting(false);\r\n  //         setConnected(false);\r\n  //       });\r\n  //   } else {\r\n  //     setConnected(false);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h4\">Dashboard</Typography>\r\n        <IconButton><RefreshIcon /></IconButton>\r\n      </div>\r\n\r\n      <Grid container className={classes.sliders}>\r\n        {\r\n          motors.map(({ name, id, min, max, value }) => (\r\n            <Grid key={id} item xs={12} sm={6}>\r\n              <Slider id={id} name={name} min={min} max={max} onChange={updateMotorValue} value={value} />\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  motors: getMotors(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateMotorValue: updatedMotorValue,\r\n  fetchMotorValues: fetchMotorValues\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { UPDATED_MOTOR_VALUE, FETCH_MOTOR_VALUES, MOTOR_RANGE_MODIFIED } from \"app/constants/actions\";\r\n\r\nexport const updatedMotorValue = (motorId, value) => ({\r\n    type: UPDATED_MOTOR_VALUE,\r\n    payload: { id: motorId, value }\r\n});\r\n\r\nexport const fetchMotorValues = () => ({\r\n    type: FETCH_MOTOR_VALUES\r\n});\r\n\r\nexport const updateMotorRange = (id, min, max) => ({\r\n    type: MOTOR_RANGE_MODIFIED,\r\n    payload: { id, min, max }\r\n});\r\n","import React from \"react\";\r\nimport { IconButton, TextField, Typography, Grid } from \"@material-ui/core\";\r\nimport IconLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport IconRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\n\r\nconst Item = ({name, min, max, onChange }) => {\r\n\r\n    const handleMinText = ({target, ...evt}) => {\r\n        onChange({min: +target.value, max});\r\n    }\r\n\r\n    const handleMaxText = ({target}) => {\r\n        onChange({max: +target.value, min});\r\n    }\r\n\r\n    const handleMaxStep = step => () => {\r\n        onChange({max: max + step, min});\r\n    }\r\n\r\n    const handleMinStep = step => () => {\r\n        onChange({min: min + step, max});\r\n    }\r\n\r\n\r\n    const looseFocus = evt => {\r\n        if (evt.key === 'Enter') {\r\n            evt.target.blur();\r\n            evt.preventDefault();\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={6} container justify=\"flex-end\">\r\n                    <TextField label=\"Min\" type=\"number\" value={min === 0 ? 0 : min.toString().replace(/^[0]+/g,\"\")} onChange={handleMinText} onKeyUp={looseFocus}/>\r\n                    <IconButton onClick={handleMinStep(-1)}><IconLeft /></IconButton>\r\n                    <IconButton onClick={handleMinStep(1)}><IconRight /></IconButton>\r\n                </Grid>\r\n                <Grid item xs={6} container justify=\"flex-end\">\r\n                    <TextField label=\"Max\" type=\"number\" value={max === 0 ? 0 : max.toString().replace(/^[0]+/g,\"\")} onChange={handleMaxText} onKeyUp={looseFocus}/>\r\n                    <IconButton onClick={handleMaxStep(-1)}><IconLeft /></IconButton>\r\n                    <IconButton onClick={handleMaxStep(1)}><IconRight /></IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Item from \"./Item\";\r\nimport { getMotors } from \"app/selectors/motors\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateMotorRange } from \"app/actions/motors\";\r\n\r\nconst Limits = ({ motors, updateMotorRange }) => {\r\n\r\n    const handleRangeChange = (id) => ({min, max}) => {\r\n        updateMotorRange(id,min,max);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">\r\n                Limits\r\n            </Typography>\r\n            {\r\n                motors.map(({ name, min, max, id }) => <Item key={id} name={name} min={min} max={max} onChange={handleRangeChange(id)}/>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    motors: getMotors(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    updateMotorRange: updateMotorRange \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Limits);\r\n","import React from \"react\";\r\nimport { Fab, makeStyles, Paper } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Connection from \"Components/Connection\";\r\nimport Limits from \"./Limits\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst Settings = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <Connection />\r\n            </Paper>\r\n            <Paper className={classes.root}>\r\n                <Limits />\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport Home from \"./home\";\r\nimport Settings from \"./settings\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\nimport NavBar from \"./Components/NavBar\";\nimport Body from \"./pages\";\n\nexport default () => {\n  return (\n    <>\n      <NavBar />\n      <Body />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { UPDATED_MOTOR_VALUE, MOTOR_RANGE_MODIFIED } from \"app/constants/actions\";\r\n\r\nconst initialState = {\r\n    byId: {\r\n        \"base\": {\r\n            \"id\": \"base\",\r\n            \"name\": \"Base\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        },\r\n        \"shoulder\": {\r\n            \"id\": \"shoulder\",\r\n            \"name\": \"Shoulder\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        },\r\n        \"elbow\": {\r\n            \"id\": \"elbow\",\r\n            \"name\": \"Elbow\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        },\r\n        \"wrist\": {\r\n            \"id\": \"wrist\",\r\n            \"name\": \"Wrist\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        },\r\n        \"pivot\": {\r\n            \"id\": \"pivot\",\r\n            \"name\": \"Pivot\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        },\r\n        \"jaws\": {\r\n            \"id\": \"jaws\",\r\n            \"name\": \"Jaws\",\r\n            \"min\": 0,\r\n            \"max\": 360,\r\n            \"value\": 0\r\n        }\r\n    },\r\n    order: []\r\n}\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case UPDATED_MOTOR_VALUE:\r\n            const { id, value } = action.payload;\r\n            return { ...state, byId: { ...state.byId, [id]: { ...state.byId[id], value } } };\r\n        case MOTOR_RANGE_MODIFIED: {\r\n            const { id, min, max } = action.payload;\r\n            return {...state, byId: { ...state.byId, [id]: { ...state.byId[id], min, max } } };\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { CONNECTED, DISCONNECTED, UPDATE_URL } from \"app/constants/actions\";\r\n\r\nconst initialState = {\r\n    connecting: false,\r\n    connected: false,\r\n    url: \"\"\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case CONNECTED:\r\n            return { ...state, connected: true, connecting: false }\r\n        case DISCONNECTED:\r\n            return { ...state, connected: false }\r\n        case UPDATE_URL:\r\n            return { ...state, url: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport motorsReducer from \"./motors\";\r\nimport uiReducer from \"./ui\";\r\n\r\nexport default combineReducers({\r\n    motors: motorsReducer,\r\n    ui: uiReducer\r\n})","import { UPDATE_URL } from \"app/constants/actions\";\r\n\r\nconst connectMiddleware = (getState, dispatch) => next => action => {\r\n    next(action);\r\n\r\n    if(action.type === UPDATE_URL) {\r\n        localStorage.setItem(\"url\", action.payload);\r\n    }\r\n};\r\n\r\nexport default connectMiddleware;","import persistMiddleware from \"./persist\";\r\n\r\nexport default [\r\n    persistMiddleware\r\n];","export default ({dispatch, getState}) => next => action => {\r\n    next(action);\r\n    localStorage.setItem(\"store\", JSON.stringify(getState()));\r\n};","import connectMiddleware from \"./app/connect\";\r\nimport motorsMiddleware from \"./app/motors\";\r\nimport coreMiddleware from \"./core\";\r\n\r\nexport default [\r\n    ...coreMiddleware,\r\n    connectMiddleware,\r\n    motorsMiddleware\r\n];","import { FETCH_MOTOR_VALUES, UPDATED_MOTOR_VALUE } from \"app/constants/actions\";\r\nimport { getUrl } from \"app/selectors/connection\";\r\nimport { getMotors } from \"app/selectors/motors\";\r\n\r\nexport default ({ getState, dispatch }) => next => action => {\r\n    next(action);\r\n\r\n    if(action.type === FETCH_MOTOR_VALUES) {\r\n        const url = getUrl(getState());\r\n        fetch(`http://${url}/position`)\r\n    }\r\n    \r\n    if(action.type === UPDATED_MOTOR_VALUE) {\r\n        const url = getUrl(getState());\r\n        const motors = getMotors(getState());\r\n        if(url) {\r\n            fetch(`http://${url}/?${motors.map(({ id, value }) => `${id}=${value.toString().padStart(3, \"0\")}`).join(\"&\")}`);    \r\n        }\r\n    }\r\n};","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport root from \"./reducers/root\";\r\nimport middleware from \"./middleware\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"store\")) || {};\r\n\r\nconst store = createStore(root, initialState, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'fontsource-roboto';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <CssBaseline />\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}